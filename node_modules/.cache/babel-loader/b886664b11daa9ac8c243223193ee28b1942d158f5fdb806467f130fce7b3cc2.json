{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _superagent = _interopRequireDefault(require(\"superagent\"));\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n* @module ApiClient\n* @version 1.2.16\n*/\n\n/**\n* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n* application to use this class directly - the *Api and model classes provide the public API for the service. The\n* contents of this file should be regarded as internal but are documented for completeness.\n* @alias module:ApiClient\n* @class\n*/\nvar ApiClient = /*#__PURE__*/function () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://finnhub.io/api/v1\n     */\n    this.basePath = 'https://finnhub.io/api/v1'.replace(/\\/+$/, '');\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n\n    this.authentications = {\n      'api_key': {\n        type: 'apiKey',\n        'in': 'query',\n        name: 'token'\n      }\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n\n    this.defaultHeaders = {\n      'User-Agent': 'OpenAPI-Generator/1.2.16/Javascript'\n    };\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n\n    this.timeout = 60000;\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.cache = true;\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n\n    this.enableCookies = false;\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n\n    if (typeof window === 'undefined') {\n      this.agent = new _superagent[\"default\"].agent();\n    }\n    /*\n     * Allow user to override superagent agent\n     */\n\n    this.requestAgent = null;\n    /*\n     * Allow user to add superagent plugins\n     */\n\n    this.plugins = null;\n  }\n  /**\n  * Returns a string representation for an actual parameter.\n  * @param param The actual parameter.\n  * @returns {String} The string representation of <code>param</code>.\n  */\n\n  _createClass(ApiClient, [{\n    key: \"paramToString\",\n    value: function paramToString(param) {\n      if (param == undefined || param == null) {\n        return '';\n      }\n      if (param instanceof Date) {\n        return param.toJSON();\n      }\n      if (ApiClient.canBeJsonified(param)) {\n        return JSON.stringify(param);\n      }\n      return param.toString();\n    }\n    /**\n    * Returns a boolean indicating if the parameter could be JSON.stringified\n    * @param param The actual parameter\n    * @returns {Boolean} Flag indicating if <code>param</code> can be JSON.stringified\n    */\n  }, {\n    key: \"buildUrl\",\n    /**\n     * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n     * NOTE: query parameters are not handled here.\n     * @param {String} path The path to append to the base URL.\n     * @param {Object} pathParams The parameter values to append.\n     * @param {String} apiBasePath Base path defined in the path, operation level to override the default one\n     * @returns {String} The encoded path with parameter values substituted.\n     */\n    value: function buildUrl(path, pathParams, apiBasePath) {\n      var _this = this;\n      if (!path.match(/^\\//)) {\n        path = '/' + path;\n      }\n      var url = this.basePath + path; // use API (operation, path) base path if defined\n\n      if (apiBasePath !== null && apiBasePath !== undefined) {\n        url = apiBasePath + path;\n      }\n      url = url.replace(/\\{([\\w-\\.]+)\\}/g, function (fullMatch, key) {\n        var value;\n        if (pathParams.hasOwnProperty(key)) {\n          value = _this.paramToString(pathParams[key]);\n        } else {\n          value = fullMatch;\n        }\n        return encodeURIComponent(value);\n      });\n      return url;\n    }\n    /**\n    * Checks whether the given content type represents JSON.<br>\n    * JSON content type examples:<br>\n    * <ul>\n    * <li>application/json</li>\n    * <li>application/json; charset=UTF8</li>\n    * <li>APPLICATION/JSON</li>\n    * </ul>\n    * @param {String} contentType The MIME content type to check.\n    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n    */\n  }, {\n    key: \"isJsonMime\",\n    value: function isJsonMime(contentType) {\n      return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n    }\n    /**\n    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n    * @param {Array.<String>} contentTypes\n    * @returns {String} The chosen content type, preferring JSON.\n    */\n  }, {\n    key: \"jsonPreferredMime\",\n    value: function jsonPreferredMime(contentTypes) {\n      for (var i = 0; i < contentTypes.length; i++) {\n        if (this.isJsonMime(contentTypes[i])) {\n          return contentTypes[i];\n        }\n      }\n      return contentTypes[0];\n    }\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n  }, {\n    key: \"isFileParam\",\n    value: function isFileParam(param) {\n      // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n      if (typeof require === 'function') {\n        var fs;\n        try {\n          fs = require('fs');\n        } catch (err) {}\n        if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n          return true;\n        }\n      } // Buffer in Node.js\n\n      if (typeof Buffer === 'function' && param instanceof Buffer) {\n        return true;\n      } // Blob in browser\n\n      if (typeof Blob === 'function' && param instanceof Blob) {\n        return true;\n      } // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n\n      if (typeof File === 'function' && param instanceof File) {\n        return true;\n      }\n      return false;\n    }\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n  }, {\n    key: \"normalizeParams\",\n    value: function normalizeParams(params) {\n      var newParams = {};\n      for (var key in params) {\n        if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n          var value = params[key];\n          if (this.isFileParam(value) || Array.isArray(value)) {\n            newParams[key] = value;\n          } else {\n            newParams[key] = this.paramToString(value);\n          }\n        }\n      }\n      return newParams;\n    }\n    /**\n    * Builds a string representation of an array-type actual parameter, according to the given collection format.\n    * @param {Array} param An array parameter.\n    * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n    */\n  }, {\n    key: \"buildCollectionParam\",\n    value: function buildCollectionParam(param, collectionFormat) {\n      if (param == null) {\n        return null;\n      }\n      switch (collectionFormat) {\n        case 'csv':\n          return param.map(this.paramToString, this).join(',');\n        case 'ssv':\n          return param.map(this.paramToString, this).join(' ');\n        case 'tsv':\n          return param.map(this.paramToString, this).join('\\t');\n        case 'pipes':\n          return param.map(this.paramToString, this).join('|');\n        case 'multi':\n          //return the array directly as SuperAgent will handle it as expected\n          return param.map(this.paramToString, this);\n        case 'passthrough':\n          return param;\n        default:\n          throw new Error('Unknown collection format: ' + collectionFormat);\n      }\n    }\n    /**\n    * Applies authentication headers to the request.\n    * @param {Object} request The request object created by a <code>superagent()</code> call.\n    * @param {Array.<String>} authNames An array of authentication method names.\n    */\n  }, {\n    key: \"applyAuthToRequest\",\n    value: function applyAuthToRequest(request, authNames) {\n      var _this2 = this;\n      authNames.forEach(function (authName) {\n        var auth = _this2.authentications[authName];\n        switch (auth.type) {\n          case 'basic':\n            if (auth.username || auth.password) {\n              request.auth(auth.username || '', auth.password || '');\n            }\n            break;\n          case 'bearer':\n            if (auth.accessToken) {\n              var localVarBearerToken = typeof auth.accessToken === 'function' ? auth.accessToken() : auth.accessToken;\n              request.set({\n                'Authorization': 'Bearer ' + localVarBearerToken\n              });\n            }\n            break;\n          case 'apiKey':\n            if (auth.apiKey) {\n              var data = {};\n              if (auth.apiKeyPrefix) {\n                data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n              } else {\n                data[auth.name] = auth.apiKey;\n              }\n              if (auth['in'] === 'header') {\n                request.set(data);\n              } else {\n                request.query(data);\n              }\n            }\n            break;\n          case 'oauth2':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n            break;\n          default:\n            throw new Error('Unknown authentication type: ' + auth.type);\n        }\n      });\n    }\n    /**\n     * Deserializes an HTTP response body into a value of the specified type.\n     * @param {Object} response A SuperAgent response object.\n     * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n     * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n     * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n     * all properties on <code>data<code> will be converted to this type.\n     * @returns A value of the specified type.\n     */\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(response, returnType) {\n      if (response == null || returnType == null || response.status == 204) {\n        return null;\n      } // Rely on SuperAgent for parsing response body.\n      // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n\n      var data = response.body;\n      if (data == null || _typeof(data) === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length) {\n        // SuperAgent does not always produce a body; use the unparsed response as a fallback\n        data = response.text;\n      }\n      return ApiClient.convertToType(data, returnType);\n    }\n    /**\n     * Callback function to receive the result of the operation.\n     * @callback module:ApiClient~callApiCallback\n     * @param {String} error Error message, if any.\n     * @param data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Invokes the REST service using the supplied settings and parameters.\n     * @param {String} path The base URL to invoke.\n     * @param {String} httpMethod The HTTP method to use.\n     * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n     * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n     * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n     * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n     * @param {Object} bodyParam The value to pass as the request body.\n     * @param {Array.<String>} authNames An array of authentication type names.\n     * @param {Array.<String>} contentTypes An array of request MIME types.\n     * @param {Array.<String>} accepts An array of acceptable response MIME types.\n     * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n     * constructor for a complex type.\n     * @param {String} apiBasePath base path defined in the operation/path level to override the default one\n     * @param {module:ApiClient~callApiCallback} callback The callback function.\n     * @returns {Object} The SuperAgent request object.\n     */\n  }, {\n    key: \"callApi\",\n    value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType, apiBasePath, callback) {\n      var _this3 = this;\n      var url = this.buildUrl(path, pathParams, apiBasePath);\n      var request = (0, _superagent[\"default\"])(httpMethod, url);\n      if (this.plugins !== null) {\n        for (var index in this.plugins) {\n          if (this.plugins.hasOwnProperty(index)) {\n            request.use(this.plugins[index]);\n          }\n        }\n      } // apply authentications\n\n      this.applyAuthToRequest(request, authNames); // set query parameters\n\n      if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n      }\n      request.query(this.normalizeParams(queryParams)); // set header parameters\n\n      request.set(this.defaultHeaders).set(this.normalizeParams(headerParams)); // set requestAgent if it is set by user\n\n      if (this.requestAgent) {\n        request.agent(this.requestAgent);\n      } // set request timeout\n\n      request.timeout(this.timeout);\n      var contentType = this.jsonPreferredMime(contentTypes);\n      if (contentType) {\n        // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n        if (contentType != 'multipart/form-data') {\n          request.type(contentType);\n        }\n      }\n      if (contentType === 'application/x-www-form-urlencoded') {\n        request.send(_querystring[\"default\"].stringify(this.normalizeParams(formParams)));\n      } else if (contentType == 'multipart/form-data') {\n        var _formParams = this.normalizeParams(formParams);\n        for (var key in _formParams) {\n          if (_formParams.hasOwnProperty(key)) {\n            var _formParamsValue = _formParams[key];\n            if (this.isFileParam(_formParamsValue)) {\n              // file field\n              request.attach(key, _formParamsValue);\n            } else if (Array.isArray(_formParamsValue) && _formParamsValue.length && this.isFileParam(_formParamsValue[0])) {\n              // multiple files\n              _formParamsValue.forEach(function (file) {\n                return request.attach(key, file);\n              });\n            } else {\n              request.field(key, _formParamsValue);\n            }\n          }\n        }\n      } else if (bodyParam !== null && bodyParam !== undefined) {\n        if (!request.header['Content-Type']) {\n          request.type('application/json');\n        }\n        request.send(bodyParam);\n      }\n      var accept = this.jsonPreferredMime(accepts);\n      if (accept) {\n        request.accept(accept);\n      }\n      if (returnType === 'Blob') {\n        request.responseType('blob');\n      } else if (returnType === 'String') {\n        request.responseType('string');\n      } // Attach previously saved cookies, if enabled\n\n      if (this.enableCookies) {\n        if (typeof window === 'undefined') {\n          this.agent._attachCookies(request);\n        } else {\n          request.withCredentials();\n        }\n      }\n      request.end(function (error, response) {\n        if (callback) {\n          var data = null;\n          if (!error) {\n            try {\n              data = _this3.deserialize(response, returnType);\n              if (_this3.enableCookies && typeof window === 'undefined') {\n                _this3.agent._saveCookies(response);\n              }\n            } catch (err) {\n              error = err;\n            }\n          }\n          callback(error, data, response);\n        }\n      });\n      return request;\n    }\n    /**\n    * Parses an ISO-8601 string representation or epoch representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n  }, {\n    key: \"hostSettings\",\n    /**\n      * Gets an array of host settings\n      * @returns An array of host settings\n      */\n    value: function hostSettings() {\n      return [{\n        'url': \"https://finnhub.io/api/v1\",\n        'description': \"No description provided\"\n      }];\n    }\n  }, {\n    key: \"getBasePathFromSettings\",\n    value: function getBasePathFromSettings(index) {\n      var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var servers = this.hostSettings(); // check array index out of bound\n\n      if (index < 0 || index >= servers.length) {\n        throw new Error(\"Invalid index \" + index + \" when selecting the host settings. Must be less than \" + servers.length);\n      }\n      var server = servers[index];\n      var url = server['url']; // go through variable and assign a value\n\n      for (var variable_name in server['variables']) {\n        if (variable_name in variables) {\n          var variable = server['variables'][variable_name];\n          if (!('enum_values' in variable) || variable['enum_values'].includes(variables[variable_name])) {\n            url = url.replace(\"{\" + variable_name + \"}\", variables[variable_name]);\n          } else {\n            throw new Error(\"The variable `\" + variable_name + \"` in the host URL has invalid value \" + variables[variable_name] + \". Must be \" + server['variables'][variable_name]['enum_values'] + \".\");\n          }\n        } else {\n          // use default value\n          url = url.replace(\"{\" + variable_name + \"}\", server['variables'][variable_name]['default_value']);\n        }\n      }\n      return url;\n    }\n    /**\n    * Constructs a new map or array model from REST data.\n    * @param data {Object|Array} The REST data.\n    * @param obj {Object|Array} The target object or array.\n    */\n  }], [{\n    key: \"canBeJsonified\",\n    value: function canBeJsonified(str) {\n      if (typeof str !== 'string' && _typeof(str) !== 'object') return false;\n      try {\n        var type = str.toString();\n        return type === '[object Object]' || type === '[object Array]';\n      } catch (err) {\n        return false;\n      }\n    }\n  }, {\n    key: \"parseDate\",\n    value: function parseDate(str) {\n      if (isNaN(str)) {\n        return new Date(str.replace(/(\\d)(T)(\\d)/i, '$1 $3'));\n      }\n      return new Date(+str);\n    }\n    /**\n    * Converts a value to the specified type.\n    * @param {(String|Object)} data The data to convert, as a string or object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns An instance of the specified type or null or undefined if data is null or undefined.\n    */\n  }, {\n    key: \"convertToType\",\n    value: function convertToType(data, type) {\n      if (data === null || data === undefined) return data;\n      switch (type) {\n        case 'Boolean':\n          return Boolean(data);\n        case 'Integer':\n          return parseInt(data, 10);\n        case 'Number':\n          return parseFloat(data);\n        case 'String':\n          return String(data);\n        case 'Date':\n          return ApiClient.parseDate(String(data));\n        case 'Blob':\n          return data;\n        default:\n          if (type === Object) {\n            // generic object, return directly\n            return data;\n          } else if (typeof type.constructFromObject === 'function') {\n            // for model type like User and enum class\n            return type.constructFromObject(data);\n          } else if (Array.isArray(type)) {\n            // for array type like: ['String']\n            var itemType = type[0];\n            return data.map(function (item) {\n              return ApiClient.convertToType(item, itemType);\n            });\n          } else if (_typeof(type) === 'object') {\n            // for plain object type like: {'String': 'Integer'}\n            var keyType, valueType;\n            for (var k in type) {\n              if (type.hasOwnProperty(k)) {\n                keyType = k;\n                valueType = type[k];\n                break;\n              }\n            }\n            var result = {};\n            for (var k in data) {\n              if (data.hasOwnProperty(k)) {\n                var key = ApiClient.convertToType(k, keyType);\n                var value = ApiClient.convertToType(data[k], valueType);\n                result[key] = value;\n              }\n            }\n            return result;\n          } else {\n            // for unknown type, return the data directly\n            return data;\n          }\n      }\n    }\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj, itemType) {\n      if (Array.isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n          if (data.hasOwnProperty(i)) obj[i] = ApiClient.convertToType(data[i], itemType);\n        }\n      } else {\n        for (var k in data) {\n          if (data.hasOwnProperty(k)) obj[k] = ApiClient.convertToType(data[k], itemType);\n        }\n      }\n    }\n  }]);\n  return ApiClient;\n}();\n/**\n * Enumeration of collection format separator strategies.\n * @enum {String}\n * @readonly\n */\n\nApiClient.CollectionFormatEnum = {\n  /**\n   * Comma-separated values. Value: <code>csv</code>\n   * @const\n   */\n  CSV: ',',\n  /**\n   * Space-separated values. Value: <code>ssv</code>\n   * @const\n   */\n  SSV: ' ',\n  /**\n   * Tab-separated values. Value: <code>tsv</code>\n   * @const\n   */\n  TSV: '\\t',\n  /**\n   * Pipe(|)-separated values. Value: <code>pipes</code>\n   * @const\n   */\n  PIPES: '|',\n  /**\n   * Native array. Value: <code>multi</code>\n   * @const\n   */\n  MULTI: 'multi'\n};\n/**\n* The default API client implementation.\n* @type {module:ApiClient}\n*/\n\nApiClient.instance = new ApiClient();\nvar _default = ApiClient;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_superagent","_interopRequireDefault","require","_querystring","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","ApiClient","basePath","replace","authentications","type","name","defaultHeaders","timeout","cache","enableCookies","window","agent","requestAgent","plugins","paramToString","param","undefined","Date","toJSON","canBeJsonified","JSON","stringify","toString","buildUrl","path","pathParams","apiBasePath","_this","match","url","fullMatch","hasOwnProperty","encodeURIComponent","isJsonMime","contentType","Boolean","jsonPreferredMime","contentTypes","isFileParam","fs","err","ReadStream","Buffer","Blob","File","normalizeParams","params","newParams","Array","isArray","buildCollectionParam","collectionFormat","map","join","Error","applyAuthToRequest","request","authNames","_this2","forEach","authName","auth","username","password","accessToken","localVarBearerToken","set","apiKey","data","apiKeyPrefix","query","deserialize","response","returnType","status","body","keys","text","convertToType","callApi","httpMethod","queryParams","headerParams","formParams","bodyParam","accepts","callback","_this3","index","use","toUpperCase","getTime","send","_formParams","_formParamsValue","attach","file","field","header","accept","responseType","_attachCookies","withCredentials","end","error","_saveCookies","hostSettings","getBasePathFromSettings","variables","arguments","servers","server","variable_name","variable","includes","str","parseDate","isNaN","parseInt","parseFloat","String","constructFromObject","itemType","item","keyType","valueType","k","result","CollectionFormatEnum","CSV","SSV","TSV","PIPES","MULTI","_default"],"sources":["/home/jeff/project1/tv/node_modules/finnhub/dist/ApiClient.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _superagent = _interopRequireDefault(require(\"superagent\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n* @module ApiClient\n* @version 1.2.16\n*/\n\n/**\n* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n* application to use this class directly - the *Api and model classes provide the public API for the service. The\n* contents of this file should be regarded as internal but are documented for completeness.\n* @alias module:ApiClient\n* @class\n*/\nvar ApiClient = /*#__PURE__*/function () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://finnhub.io/api/v1\n     */\n    this.basePath = 'https://finnhub.io/api/v1'.replace(/\\/+$/, '');\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n\n    this.authentications = {\n      'api_key': {\n        type: 'apiKey',\n        'in': 'query',\n        name: 'token'\n      }\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n\n    this.defaultHeaders = {\n      'User-Agent': 'OpenAPI-Generator/1.2.16/Javascript'\n    };\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n\n    this.timeout = 60000;\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.cache = true;\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n\n    this.enableCookies = false;\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n\n    if (typeof window === 'undefined') {\n      this.agent = new _superagent[\"default\"].agent();\n    }\n    /*\n     * Allow user to override superagent agent\n     */\n\n\n    this.requestAgent = null;\n    /*\n     * Allow user to add superagent plugins\n     */\n\n    this.plugins = null;\n  }\n  /**\n  * Returns a string representation for an actual parameter.\n  * @param param The actual parameter.\n  * @returns {String} The string representation of <code>param</code>.\n  */\n\n\n  _createClass(ApiClient, [{\n    key: \"paramToString\",\n    value: function paramToString(param) {\n      if (param == undefined || param == null) {\n        return '';\n      }\n\n      if (param instanceof Date) {\n        return param.toJSON();\n      }\n\n      if (ApiClient.canBeJsonified(param)) {\n        return JSON.stringify(param);\n      }\n\n      return param.toString();\n    }\n    /**\n    * Returns a boolean indicating if the parameter could be JSON.stringified\n    * @param param The actual parameter\n    * @returns {Boolean} Flag indicating if <code>param</code> can be JSON.stringified\n    */\n\n  }, {\n    key: \"buildUrl\",\n\n    /**\n     * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n     * NOTE: query parameters are not handled here.\n     * @param {String} path The path to append to the base URL.\n     * @param {Object} pathParams The parameter values to append.\n     * @param {String} apiBasePath Base path defined in the path, operation level to override the default one\n     * @returns {String} The encoded path with parameter values substituted.\n     */\n    value: function buildUrl(path, pathParams, apiBasePath) {\n      var _this = this;\n\n      if (!path.match(/^\\//)) {\n        path = '/' + path;\n      }\n\n      var url = this.basePath + path; // use API (operation, path) base path if defined\n\n      if (apiBasePath !== null && apiBasePath !== undefined) {\n        url = apiBasePath + path;\n      }\n\n      url = url.replace(/\\{([\\w-\\.]+)\\}/g, function (fullMatch, key) {\n        var value;\n\n        if (pathParams.hasOwnProperty(key)) {\n          value = _this.paramToString(pathParams[key]);\n        } else {\n          value = fullMatch;\n        }\n\n        return encodeURIComponent(value);\n      });\n      return url;\n    }\n    /**\n    * Checks whether the given content type represents JSON.<br>\n    * JSON content type examples:<br>\n    * <ul>\n    * <li>application/json</li>\n    * <li>application/json; charset=UTF8</li>\n    * <li>APPLICATION/JSON</li>\n    * </ul>\n    * @param {String} contentType The MIME content type to check.\n    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n    */\n\n  }, {\n    key: \"isJsonMime\",\n    value: function isJsonMime(contentType) {\n      return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n    }\n    /**\n    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n    * @param {Array.<String>} contentTypes\n    * @returns {String} The chosen content type, preferring JSON.\n    */\n\n  }, {\n    key: \"jsonPreferredMime\",\n    value: function jsonPreferredMime(contentTypes) {\n      for (var i = 0; i < contentTypes.length; i++) {\n        if (this.isJsonMime(contentTypes[i])) {\n          return contentTypes[i];\n        }\n      }\n\n      return contentTypes[0];\n    }\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n\n  }, {\n    key: \"isFileParam\",\n    value: function isFileParam(param) {\n      // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n      if (typeof require === 'function') {\n        var fs;\n\n        try {\n          fs = require('fs');\n        } catch (err) {}\n\n        if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n          return true;\n        }\n      } // Buffer in Node.js\n\n\n      if (typeof Buffer === 'function' && param instanceof Buffer) {\n        return true;\n      } // Blob in browser\n\n\n      if (typeof Blob === 'function' && param instanceof Blob) {\n        return true;\n      } // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n\n\n      if (typeof File === 'function' && param instanceof File) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n\n  }, {\n    key: \"normalizeParams\",\n    value: function normalizeParams(params) {\n      var newParams = {};\n\n      for (var key in params) {\n        if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n          var value = params[key];\n\n          if (this.isFileParam(value) || Array.isArray(value)) {\n            newParams[key] = value;\n          } else {\n            newParams[key] = this.paramToString(value);\n          }\n        }\n      }\n\n      return newParams;\n    }\n    /**\n    * Builds a string representation of an array-type actual parameter, according to the given collection format.\n    * @param {Array} param An array parameter.\n    * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n    */\n\n  }, {\n    key: \"buildCollectionParam\",\n    value: function buildCollectionParam(param, collectionFormat) {\n      if (param == null) {\n        return null;\n      }\n\n      switch (collectionFormat) {\n        case 'csv':\n          return param.map(this.paramToString, this).join(',');\n\n        case 'ssv':\n          return param.map(this.paramToString, this).join(' ');\n\n        case 'tsv':\n          return param.map(this.paramToString, this).join('\\t');\n\n        case 'pipes':\n          return param.map(this.paramToString, this).join('|');\n\n        case 'multi':\n          //return the array directly as SuperAgent will handle it as expected\n          return param.map(this.paramToString, this);\n\n        case 'passthrough':\n          return param;\n\n        default:\n          throw new Error('Unknown collection format: ' + collectionFormat);\n      }\n    }\n    /**\n    * Applies authentication headers to the request.\n    * @param {Object} request The request object created by a <code>superagent()</code> call.\n    * @param {Array.<String>} authNames An array of authentication method names.\n    */\n\n  }, {\n    key: \"applyAuthToRequest\",\n    value: function applyAuthToRequest(request, authNames) {\n      var _this2 = this;\n\n      authNames.forEach(function (authName) {\n        var auth = _this2.authentications[authName];\n\n        switch (auth.type) {\n          case 'basic':\n            if (auth.username || auth.password) {\n              request.auth(auth.username || '', auth.password || '');\n            }\n\n            break;\n\n          case 'bearer':\n            if (auth.accessToken) {\n              var localVarBearerToken = typeof auth.accessToken === 'function' ? auth.accessToken() : auth.accessToken;\n              request.set({\n                'Authorization': 'Bearer ' + localVarBearerToken\n              });\n            }\n\n            break;\n\n          case 'apiKey':\n            if (auth.apiKey) {\n              var data = {};\n\n              if (auth.apiKeyPrefix) {\n                data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n              } else {\n                data[auth.name] = auth.apiKey;\n              }\n\n              if (auth['in'] === 'header') {\n                request.set(data);\n              } else {\n                request.query(data);\n              }\n            }\n\n            break;\n\n          case 'oauth2':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n\n            break;\n\n          default:\n            throw new Error('Unknown authentication type: ' + auth.type);\n        }\n      });\n    }\n    /**\n     * Deserializes an HTTP response body into a value of the specified type.\n     * @param {Object} response A SuperAgent response object.\n     * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n     * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n     * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n     * all properties on <code>data<code> will be converted to this type.\n     * @returns A value of the specified type.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(response, returnType) {\n      if (response == null || returnType == null || response.status == 204) {\n        return null;\n      } // Rely on SuperAgent for parsing response body.\n      // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n\n\n      var data = response.body;\n\n      if (data == null || _typeof(data) === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length) {\n        // SuperAgent does not always produce a body; use the unparsed response as a fallback\n        data = response.text;\n      }\n\n      return ApiClient.convertToType(data, returnType);\n    }\n    /**\n     * Callback function to receive the result of the operation.\n     * @callback module:ApiClient~callApiCallback\n     * @param {String} error Error message, if any.\n     * @param data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Invokes the REST service using the supplied settings and parameters.\n     * @param {String} path The base URL to invoke.\n     * @param {String} httpMethod The HTTP method to use.\n     * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n     * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n     * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n     * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n     * @param {Object} bodyParam The value to pass as the request body.\n     * @param {Array.<String>} authNames An array of authentication type names.\n     * @param {Array.<String>} contentTypes An array of request MIME types.\n     * @param {Array.<String>} accepts An array of acceptable response MIME types.\n     * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n     * constructor for a complex type.\n     * @param {String} apiBasePath base path defined in the operation/path level to override the default one\n     * @param {module:ApiClient~callApiCallback} callback The callback function.\n     * @returns {Object} The SuperAgent request object.\n     */\n\n  }, {\n    key: \"callApi\",\n    value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType, apiBasePath, callback) {\n      var _this3 = this;\n\n      var url = this.buildUrl(path, pathParams, apiBasePath);\n      var request = (0, _superagent[\"default\"])(httpMethod, url);\n\n      if (this.plugins !== null) {\n        for (var index in this.plugins) {\n          if (this.plugins.hasOwnProperty(index)) {\n            request.use(this.plugins[index]);\n          }\n        }\n      } // apply authentications\n\n\n      this.applyAuthToRequest(request, authNames); // set query parameters\n\n      if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n      }\n\n      request.query(this.normalizeParams(queryParams)); // set header parameters\n\n      request.set(this.defaultHeaders).set(this.normalizeParams(headerParams)); // set requestAgent if it is set by user\n\n      if (this.requestAgent) {\n        request.agent(this.requestAgent);\n      } // set request timeout\n\n\n      request.timeout(this.timeout);\n      var contentType = this.jsonPreferredMime(contentTypes);\n\n      if (contentType) {\n        // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n        if (contentType != 'multipart/form-data') {\n          request.type(contentType);\n        }\n      }\n\n      if (contentType === 'application/x-www-form-urlencoded') {\n        request.send(_querystring[\"default\"].stringify(this.normalizeParams(formParams)));\n      } else if (contentType == 'multipart/form-data') {\n        var _formParams = this.normalizeParams(formParams);\n\n        for (var key in _formParams) {\n          if (_formParams.hasOwnProperty(key)) {\n            var _formParamsValue = _formParams[key];\n\n            if (this.isFileParam(_formParamsValue)) {\n              // file field\n              request.attach(key, _formParamsValue);\n            } else if (Array.isArray(_formParamsValue) && _formParamsValue.length && this.isFileParam(_formParamsValue[0])) {\n              // multiple files\n              _formParamsValue.forEach(function (file) {\n                return request.attach(key, file);\n              });\n            } else {\n              request.field(key, _formParamsValue);\n            }\n          }\n        }\n      } else if (bodyParam !== null && bodyParam !== undefined) {\n        if (!request.header['Content-Type']) {\n          request.type('application/json');\n        }\n\n        request.send(bodyParam);\n      }\n\n      var accept = this.jsonPreferredMime(accepts);\n\n      if (accept) {\n        request.accept(accept);\n      }\n\n      if (returnType === 'Blob') {\n        request.responseType('blob');\n      } else if (returnType === 'String') {\n        request.responseType('string');\n      } // Attach previously saved cookies, if enabled\n\n\n      if (this.enableCookies) {\n        if (typeof window === 'undefined') {\n          this.agent._attachCookies(request);\n        } else {\n          request.withCredentials();\n        }\n      }\n\n      request.end(function (error, response) {\n        if (callback) {\n          var data = null;\n\n          if (!error) {\n            try {\n              data = _this3.deserialize(response, returnType);\n\n              if (_this3.enableCookies && typeof window === 'undefined') {\n                _this3.agent._saveCookies(response);\n              }\n            } catch (err) {\n              error = err;\n            }\n          }\n\n          callback(error, data, response);\n        }\n      });\n      return request;\n    }\n    /**\n    * Parses an ISO-8601 string representation or epoch representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n\n  }, {\n    key: \"hostSettings\",\n\n    /**\n      * Gets an array of host settings\n      * @returns An array of host settings\n      */\n    value: function hostSettings() {\n      return [{\n        'url': \"https://finnhub.io/api/v1\",\n        'description': \"No description provided\"\n      }];\n    }\n  }, {\n    key: \"getBasePathFromSettings\",\n    value: function getBasePathFromSettings(index) {\n      var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var servers = this.hostSettings(); // check array index out of bound\n\n      if (index < 0 || index >= servers.length) {\n        throw new Error(\"Invalid index \" + index + \" when selecting the host settings. Must be less than \" + servers.length);\n      }\n\n      var server = servers[index];\n      var url = server['url']; // go through variable and assign a value\n\n      for (var variable_name in server['variables']) {\n        if (variable_name in variables) {\n          var variable = server['variables'][variable_name];\n\n          if (!('enum_values' in variable) || variable['enum_values'].includes(variables[variable_name])) {\n            url = url.replace(\"{\" + variable_name + \"}\", variables[variable_name]);\n          } else {\n            throw new Error(\"The variable `\" + variable_name + \"` in the host URL has invalid value \" + variables[variable_name] + \". Must be \" + server['variables'][variable_name]['enum_values'] + \".\");\n          }\n        } else {\n          // use default value\n          url = url.replace(\"{\" + variable_name + \"}\", server['variables'][variable_name]['default_value']);\n        }\n      }\n\n      return url;\n    }\n    /**\n    * Constructs a new map or array model from REST data.\n    * @param data {Object|Array} The REST data.\n    * @param obj {Object|Array} The target object or array.\n    */\n\n  }], [{\n    key: \"canBeJsonified\",\n    value: function canBeJsonified(str) {\n      if (typeof str !== 'string' && _typeof(str) !== 'object') return false;\n\n      try {\n        var type = str.toString();\n        return type === '[object Object]' || type === '[object Array]';\n      } catch (err) {\n        return false;\n      }\n    }\n  }, {\n    key: \"parseDate\",\n    value: function parseDate(str) {\n      if (isNaN(str)) {\n        return new Date(str.replace(/(\\d)(T)(\\d)/i, '$1 $3'));\n      }\n\n      return new Date(+str);\n    }\n    /**\n    * Converts a value to the specified type.\n    * @param {(String|Object)} data The data to convert, as a string or object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns An instance of the specified type or null or undefined if data is null or undefined.\n    */\n\n  }, {\n    key: \"convertToType\",\n    value: function convertToType(data, type) {\n      if (data === null || data === undefined) return data;\n\n      switch (type) {\n        case 'Boolean':\n          return Boolean(data);\n\n        case 'Integer':\n          return parseInt(data, 10);\n\n        case 'Number':\n          return parseFloat(data);\n\n        case 'String':\n          return String(data);\n\n        case 'Date':\n          return ApiClient.parseDate(String(data));\n\n        case 'Blob':\n          return data;\n\n        default:\n          if (type === Object) {\n            // generic object, return directly\n            return data;\n          } else if (typeof type.constructFromObject === 'function') {\n            // for model type like User and enum class\n            return type.constructFromObject(data);\n          } else if (Array.isArray(type)) {\n            // for array type like: ['String']\n            var itemType = type[0];\n            return data.map(function (item) {\n              return ApiClient.convertToType(item, itemType);\n            });\n          } else if (_typeof(type) === 'object') {\n            // for plain object type like: {'String': 'Integer'}\n            var keyType, valueType;\n\n            for (var k in type) {\n              if (type.hasOwnProperty(k)) {\n                keyType = k;\n                valueType = type[k];\n                break;\n              }\n            }\n\n            var result = {};\n\n            for (var k in data) {\n              if (data.hasOwnProperty(k)) {\n                var key = ApiClient.convertToType(k, keyType);\n                var value = ApiClient.convertToType(data[k], valueType);\n                result[key] = value;\n              }\n            }\n\n            return result;\n          } else {\n            // for unknown type, return the data directly\n            return data;\n          }\n\n      }\n    }\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj, itemType) {\n      if (Array.isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n          if (data.hasOwnProperty(i)) obj[i] = ApiClient.convertToType(data[i], itemType);\n        }\n      } else {\n        for (var k in data) {\n          if (data.hasOwnProperty(k)) obj[k] = ApiClient.convertToType(data[k], itemType);\n        }\n      }\n    }\n  }]);\n\n  return ApiClient;\n}();\n/**\n * Enumeration of collection format separator strategies.\n * @enum {String}\n * @readonly\n */\n\n\nApiClient.CollectionFormatEnum = {\n  /**\n   * Comma-separated values. Value: <code>csv</code>\n   * @const\n   */\n  CSV: ',',\n\n  /**\n   * Space-separated values. Value: <code>ssv</code>\n   * @const\n   */\n  SSV: ' ',\n\n  /**\n   * Tab-separated values. Value: <code>tsv</code>\n   * @const\n   */\n  TSV: '\\t',\n\n  /**\n   * Pipe(|)-separated values. Value: <code>pipes</code>\n   * @const\n   */\n  PIPES: '|',\n\n  /**\n   * Native array. Value: <code>multi</code>\n   * @const\n   */\n  MULTI: 'multi'\n};\n/**\n* The default API client implementation.\n* @type {module:ApiClient}\n*/\n\nApiClient.instance = new ApiClient();\nvar _default = ApiClient;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}